{"version":3,"sources":["components/Icon.js","pages/IndexPage.js","components/Button.js","components/Header.js","Layout.js","pages/ResumePage.js","pages/NotFoundPage.js","App.js","serviceWorker.js","index.js"],"names":["REGULAR","LIGHT","BRAND","SOLID","Icon","render","react_default","a","createElement","Fragment","className","_this","getClass","renderAnimatedIcon","content","props","animated","classes","icon","icon--animated","icon__default","icon__transform","show-animation","showSecondIcon","getIconStyle","getIconName","concat","size","type","classNames","style","iconStyle","name","secondIconName","Component","defaultProps","IndexPage","src","process","alt","moment","diff","href","target","rel","src_components_Icon","Button","this","onClick","children","button","Header","Object","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","getNavClass","headerConfig","map","renderHeaderItem","src_components_Button","handleNavBarIconClick","state","opened","headerItem","key","Link","to","route","label","header__nav","header__nav--open","event","setState","preventDefault","Layout","src_components_Header","lib","ResumePage","NotFoundPage","toast","error","App","src_Layout_0","Switch","Route","exact","path","component","Boolean","window","location","hostname","match","ReactDOM","BrowserRouter","basename","src_App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.c4d085dc.chunk.js","sourcesContent":["import React, { Component } from 'react';\nimport './Icon.scss';\nimport classNames from 'classnames';\nimport PropTypes from 'prop-types';\n\nconst PRIMARY = 'primary';\nconst REGULAR = 'regular';\nconst LIGHT = 'light';\nconst BRAND = 'brand';\nconst SOLID = 'solid'\nconst XS = 'xs';\nconst SM = 'sm';\nconst LG = 'lg';\nconst X2 = '2x';\nconst X3 = '3x';\nconst X4 = '4x';\nconst X5 = '5x';\nconst X6 = '6x';\nconst X7 = '7x';\nconst X8 = '8x';\nconst X9 = '9x';\nconst x10 = '10x';\n\nclass Icon extends Component {\n  render = () => {\n    return(\n      <React.Fragment>\n        <i className={this.getClass()} />\n        {this.renderAnimatedIcon()}\n      </React.Fragment>\n    );\n  }\n\n  renderAnimatedIcon = () => {\n    let content;\n\n    if (this.props.animated) {\n      content = (<i className={this.getClass(true)} />);\n    }\n\n    return content;\n  }\n\n  getClass = (animated) => {\n    let classes = {\n      \"icon\": true,\n      \"icon--animated\": this.props.animated,\n      \"icon__default\": this.props.animated && !animated,\n      \"icon__transform\": this.props.animated && animated,\n      \"show-animation\": this.props.showSecondIcon\n    };\n\n    classes[this.getIconStyle()] = true;\n    classes[this.getIconName(animated)] = true;\n    classes[`fa-${this.props.size}`] = true;\n    classes[`icon--${this.props.type}`] = true;\n    classes[this.props.className] = this.props.className;\n\n    return classNames(classes);\n  }\n\n  getIconStyle = () => {\n    let prefix = 'fa';\n    let style;\n\n    switch (this.props.iconStyle) {\n      case REGULAR:\n        style = `${prefix}r`;\n        break;\n      case LIGHT:\n        style = `${prefix}l`;\n        break;\n      case BRAND:\n        style = `${prefix}b`;\n        break;\n      case SOLID:\n        style = `${prefix}s`\n        break;\n      default:\n        style = '';\n        break;\n    }\n\n    return style;\n  }\n\n  getIconName = (animated) => {\n    let name = animated ? this.props.secondIconName : this.props.name;\n\n    return `fa-${name}`;\n  }\n}\n\nIcon.defaultProps = {\n  animated: false,\n  showSecondIcon: false,\n  size: 'sm',\n  type: PRIMARY\n}\n\nIcon.propTypes = {\n  iconStyle: PropTypes.oneOf([REGULAR, LIGHT, BRAND, SOLID]),\n  size: PropTypes.oneOf([XS, SM, LG, X2, X3, X4, X5, X6, X7, X8, X9, x10])\n}\n\nexport default Icon;\n","import React, { Component } from 'react';\nimport moment from 'moment';\nimport './IndexPage.scss';\nimport Icon from '../components/Icon';\n\nclass IndexPage extends Component {\n  render() {\n    return (\n      <article className=\"indexpage text-center app__content\">\n        <div className=\"indexpage__imagecontainer\">\n          <img src={`${process.env.PUBLIC_URL}/bio_pic.jpg`} alt=\"Personal\" />\n        </div>\n        <h1>\n          Hi! I'm Sebas.\n        </h1>\n        <section>\n          <p>\n            My name is Sebastian Alarcon. I'm {moment().diff([1992, 2, 28], 'years')} years old and I was born in Bogota, Colombia.\n          </p>\n          <a href=\"https://github.com/sebas-alarconr\" target=\"_blank\" rel=\"noopener noreferrer\">\n            <Icon\n              iconStyle=\"brand\"\n              name=\"github-square\"\n              size=\"2x\"\n              type=\"secondary\" />\n          </a>\n          <a href=\"https://www.linkedin.com/in/sebastian-alarcon-ramos\" target=\"_blank\" rel=\"noopener noreferrer\">\n            <Icon\n              iconStyle=\"brand\"\n              name=\"linkedin\"\n              size=\"2x\"\n              type=\"secondary\" />\n          </a>\n        </section>\n      </article>\n    );\n  }\n}\n\nexport default IndexPage;\n","import React, { Component } from 'react';\nimport './Button.scss';\nimport classNames from 'classnames';\n\nclass Button extends Component {\n  render() {\n    return(\n      <button className={this.getClass()} onClick={this.props.onClick}>\n        {this.props.children}\n      </button>\n    )\n  }\n\n  getClass() {\n    let classes = {\n      button: true\n    };\n\n    classes[this.props.className]= this.props.className;\n\n    return classNames(classes);\n  }\n}\n\nexport default Button;\n","import React, { Component } from 'react';\nimport { Link } from 'react-router-dom';\nimport './Header.scss';\nimport headerConfig from '../data/header';\nimport Icon from './Icon';\nimport Button from './Button';\nimport classNames from 'classnames';\n\nclass Header extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      opened: false\n    };\n  }\n\n  render = () => {\n    return(\n      <header className=\"header\">\n        <nav className={this.getNavClass()}>\n          <ul className=\"header__list no-margin\">\n            {headerConfig.map(this.renderHeaderItem)}\n          </ul>\n          <div className=\"header__menuicon hide-medium-up\">\n            <Button onClick={this.handleNavBarIconClick} className=\"header__buttonmenu\">\n              <Icon\n                animated={true}\n                className=\"no-margin\"\n                iconStyle=\"solid\"\n                name=\"bars\"\n                secondIconName=\"times\"\n                showSecondIcon={this.state.opened}\n                size=\"lg\"\n                type=\"tertiary\" />\n            </Button>\n          </div>\n        </nav>\n      </header>\n    );\n  }\n\n  renderHeaderItem = (headerItem, key) => {\n    return (\n      <li className=\"header__listitem\" key={key}>\n        <Link to={headerItem.route}>\n          {headerItem.label}\n        </Link>\n      </li>\n    )\n  }\n\n  getNavClass = () => {\n    let classes = {\n      \"header__nav\": true,\n      \"header__nav--open\": this.state.opened\n    };\n\n    return classNames(classes);\n  }\n\n  handleNavBarIconClick = (event) => {\n    this.setState({\n      opened: !this.state.opened\n    });\n\n    event.preventDefault();\n  }\n}\n\nexport default Header;\n","import React, { Component } from 'react';\nimport Header from './components/Header';\nimport { ToastContainer } from 'react-toastify';\nimport './Layout.scss';\n\nclass Layout extends Component {\n  render() {\n    return (\n      <React.Fragment>\n        <Header />\n        <ToastContainer />\n        {this.props.children}\n      </React.Fragment>\n    );\n  }\n}\n\nexport default Layout;\n","import React, { Component } from 'react';\n\nclass ResumePage extends Component {\n  render() {\n    return(\n      <div>\n        Resume Page\n      </div>\n    )\n  }\n}\n\nexport default ResumePage;","import React, { Component } from 'react';\nimport { toast } from 'react-toastify';\nimport './NotFoundPage.scss';\n\nclass NotFoundPage extends Component {\n  render() {\n    toast.error(\"Oops! This page seems that doesn't exist\");\n\n    return (\n      <article className=\"notfoundpage\">\n        <img\n          alt=\"Not Found\"\n          className=\"notfoundpage__image\"\n          src={`${process.env.PUBLIC_URL}/404.jpg`} />\n        <div className=\"notfoundpage__textcontainer\">\n          <h1>\n            404! Page Not Found.\n          </h1>\n          <h2>\n            We were searching your page but we couldn't find it.\n          </h2>\n        </div>\n      </article>\n    );\n  }\n}\n\nexport default NotFoundPage;","import { Route, Switch} from 'react-router-dom';\nimport React, { Component } from 'react';\nimport IndexPage from './pages/IndexPage';\nimport Layout from './Layout';\nimport ResumePage from './pages/ResumePage';\nimport NotFoundPage from './pages/NotFoundPage';\n\nclass App extends Component {\n  render() {\n    return (\n      <Layout>\n        <Switch>\n          <Route exact path=\"/\" component={IndexPage} />\n          <Route exact path=\"/resume\" component={ResumePage} />\n          <Route component={NotFoundPage} />\n        </Switch>\n      </Layout>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import App from './App';\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.scss';\nimport * as serviceWorker from './serviceWorker';\nimport { BrowserRouter as Router } from 'react-router-dom';\nimport 'react-toastify/dist/ReactToastify.min.css';\n\nconst AppClient = () => (\n  <Router basename={process.env.PUBLIC_URL || process.env.REACT_APP_PUBLIC_URL}>\n    <App />\n  </Router>\n);\n\nReactDOM.render(<AppClient />, document.getElementById('root'));\nserviceWorker.unregister();\n"],"sourceRoot":""}