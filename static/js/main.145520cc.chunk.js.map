{"version":3,"sources":["components/Icon.js","pages/IndexPage.js","components/Header.js","Layout.js","pages/ResumePage.js","pages/NotFoundPage.js","App.js","serviceWorker.js","index.js"],"names":["REGULAR","LIGHT","BRAND","SOLID","Icon","render","react_default","a","createElement","className","_this","getClassname","_classNames","classNames","icon","Object","defineProperty","getIconStyle","getIconName","concat","props","size","type","style","iconStyle","name","Component","defaultProps","IndexPage","src","process","alt","moment","diff","href","target","rel","src_components_Icon","Header","headerConfig","map","renderHeaderItem","headerItem","key","Link","to","route","label","Layout","Fragment","src_components_Header","lib","this","children","ResumePage","NotFoundPage","toast","error","App","src_Layout_0","Switch","Route","exact","path","component","Boolean","window","location","hostname","match","ReactDOM","BrowserRouter","basename","src_App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.145520cc.chunk.js","sourcesContent":["import React, { Component } from 'react';\nimport './Icon.scss';\nimport classNames from 'classnames';\nimport PropTypes from 'prop-types';\n\nconst REGULAR = 'regular';\nconst LIGHT = 'light';\nconst BRAND = 'brand';\nconst SOLID = 'solid'\nconst XS = 'xs';\nconst SM = 'sm';\nconst LG = 'lg';\nconst X2 = '2x';\nconst X3 = '3x';\nconst X4 = '4x';\nconst X5 = '5x';\nconst X6 = '6x';\nconst X7 = '7x';\nconst X8 = '8x';\nconst X9 = '9x';\nconst x10 = '10x';\n\nclass Icon extends Component {\n  render = () => {\n    return(\n      <i className={this.getClassname()} />\n    );\n  }\n\n  getClassname = () => {\n    return classNames({\n      \"icon\": true,\n      [this.getIconStyle()]: true,\n      [this.getIconName()]: true,\n      [`fa-${this.props.size}`]: true,\n      [`icon--${this.props.type}`]: true\n    });\n  }\n\n  getIconStyle = () => {\n    let prefix = 'fa';\n    let style;\n\n    switch (this.props.iconStyle) {\n      case REGULAR:\n        style = `${prefix}r`;\n        break;\n      case LIGHT:\n        style = `${prefix}l`;\n        break;\n      case BRAND:\n        style = `${prefix}b`;\n        break;\n      case SOLID:\n        style = `${prefix}s`\n        break;\n      default:\n        style = '';\n        break;\n    }\n\n    return style;\n  }\n\n  getIconName = () => {\n    return `fa-${this.props.name}`;\n  }\n}\n\nIcon.defaultProps = {\n  size: 'sm'\n}\n\nIcon.propTypes = {\n  style: PropTypes.oneOf([REGULAR, LIGHT, BRAND, SOLID]),\n  size: PropTypes.oneOf([XS, SM, LG, X2, X3, X4, X5, X6, X7, X8, X9, x10])\n}\n\nexport default Icon;\n","import React, { Component } from 'react';\nimport moment from 'moment';\nimport './IndexPage.scss';\nimport Icon from '../components/Icon';\n\nclass IndexPage extends Component {\n  render() {\n    return (\n      <article className=\"indexpage text-center app__content\">\n        <div className=\"indexpage__imagecontainer\">\n          <img src={`${process.env.PUBLIC_URL}/bio_pic.jpg`} alt=\"Personal\" />\n        </div>\n        <h1>\n          Hi! I'm Sebas.\n        </h1>\n        <section>\n          <p>\n            My name is Sebastian Alarcon. I'm {moment().diff([1992, 2, 28], 'years')} years old and I was born in Bogota, Colombia.\n          </p>\n          <a href=\"https://github.com/sebas-alarconr\" target=\"_blank\" rel=\"noopener noreferrer\">\n            <Icon\n              iconStyle=\"brand\"\n              name=\"github-square\"\n              size=\"2x\"\n              type=\"secondary\" />\n          </a>\n          <a href=\"https://www.linkedin.com/in/sebastian-alarcon-ramos\" target=\"_blank\" rel=\"noopener noreferrer\">\n            <Icon\n              iconStyle=\"brand\"\n              name=\"linkedin\"\n              size=\"2x\"\n              type=\"secondary\" />\n          </a>\n        </section>\n      </article>\n    );\n  }\n}\n\nexport default IndexPage;\n","import React, { Component } from 'react';\nimport { Link } from 'react-router-dom';\nimport './Header.scss';\nimport headerConfig from '../data/header';\n\nclass Header extends Component {\n  render = () => {\n    return(\n      <header className=\"header\">\n        <nav>\n          <ul className=\"header__list\">\n            {headerConfig.map(this.renderHeaderItem)}\n          </ul>\n        </nav>\n      </header>\n    );\n  }\n\n  renderHeaderItem = (headerItem, key) => {\n    return (\n      <li className=\"header__listitem\" key={key}>\n        <Link to={headerItem.route}>\n          {headerItem.label}\n        </Link>\n      </li>\n    )\n  }\n}\n\nexport default Header;\n","import React, { Component } from 'react';\nimport Header from './components/Header';\nimport { ToastContainer } from 'react-toastify';\nimport './Layout.scss';\n\nclass Layout extends Component {\n  render() {\n    return (\n      <React.Fragment>\n        <Header />\n        <ToastContainer />\n        {this.props.children}\n      </React.Fragment>\n    );\n  }\n}\n\nexport default Layout;\n","import React, { Component } from 'react';\n\nclass ResumePage extends Component {\n  render() {\n    return(\n      <div>\n        Resume Page\n      </div>\n    )\n  }\n}\n\nexport default ResumePage;","import React, { Component } from 'react';\nimport { toast } from 'react-toastify';\nimport './NotFoundPage.scss';\n\nclass NotFoundPage extends Component {\n  render() {\n    toast.error(\"Oops! This page seems that doesn't exist\");\n\n    return (\n      <article className=\"notfoundpage\">\n        <img\n          alt=\"Not Found\"\n          className=\"notfoundpage__image\"\n          src={`${process.env.PUBLIC_URL}/404.jpg`} />\n        <div className=\"notfoundpage__textcontainer\">\n          <h1>\n            404! Page Not Found.\n          </h1>\n          <h2>\n            We were searching your page but we couldn't find it.\n          </h2>\n        </div>\n      </article>\n    );\n  }\n}\n\nexport default NotFoundPage;","import { Route, Switch} from 'react-router-dom';\nimport React, { Component } from 'react';\nimport IndexPage from './pages/IndexPage';\nimport Layout from './Layout';\nimport ResumePage from './pages/ResumePage';\nimport NotFoundPage from './pages/NotFoundPage';\n\nclass App extends Component {\n  render() {\n    return (\n      <Layout>\n        <Switch>\n          <Route exact path=\"/\" component={IndexPage} />\n          <Route exact path=\"/resume\" component={ResumePage} />\n          <Route component={NotFoundPage} />\n        </Switch>\n      </Layout>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import App from './App';\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.scss';\nimport * as serviceWorker from './serviceWorker';\nimport { BrowserRouter as Router } from 'react-router-dom';\nimport 'react-toastify/dist/ReactToastify.min.css';\n\nconst AppClient = () => (\n  <Router basename={process.env.PUBLIC_URL || process.env.REACT_APP_PUBLIC_URL}>\n    <App />\n  </Router>\n);\n\nReactDOM.render(<AppClient />, document.getElementById('root'));\nserviceWorker.unregister();\n"],"sourceRoot":""}